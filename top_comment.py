import praw
import random
import datetime
import time
from praw.reddit import Subreddit
from textblob import TextBlob

# copy your generate_comment function from the madlibs assignment here
madlibs = [
    "[TRUMP] [REALLY] needs to stop tweeting. His [TWEETS] are [CRAZY] and [VERY] self-centered.",
    "[LOOKS] as though Trump's wall did not [WORK]. I [HOPE] Trump's [PEOPLE] are [HAPPY] with their weird apparel now.",
    "Aside from Trump's [POLICIES] when he [SPOKE] I was always [WORRIED]. His [WORDS] never came across [ELOQUENTLY].",
    "Trump's [COMMENTS] about women were [HORRIBLE]! As [PRESIDENT] he should have been more [RESPECTFUL] or kept [QUIET].",
    "Trump was even [RUDE] to [PENCE]. He called him [BAD] names and did not appear to [CARE] about him in times of [NEGATIVE] media coverage about his presidency.",
    "Trump will never [LEAVE] the news. He [LOVES] to be the [STAR] too much. He should [RETIRE] soon and learn to [SUPPORT] the new administrations."
]
replacements = {
    'TRUMP' : ['Trump', 'Former President', 'Donald', 'Donald Trump', 'Former President Trump'],
    'REALLY' : ['really', 'absolutely', 'immediately', 'actually','honestly'],
    'TWEETS' : ['tweets', 'posts', 'comments', 'social media sharings', 'messages'],
    'CRAZY' : ['crazy', 'insane', 'riduculous', 'outragous', 'absurd'],
    'VERY' : ['very', 'deeply', 'particularly', 'extremely', 'excessively'],
    'LOOKS' : ['Looks', 'Appears', 'Seems','Comes across', 'Presents'],
    'WORK' : ['work', 'get built', 'succeed', 'get finished', 'every appear'],
    'HOPE' : ['hope', 'pray'],
    'PEOPLE' : ['people', 'followers', 'citizens', 'constituents', 'voters'],
    'HAPPY' : ['happy', 'pleased', 'content', 'satisfied', 'delighted'],
    'POLICIES' : ['policies', 'beliefs', 'laws', 'poltical desires', 'poltical strategies'],
    'SPOKE' : ['spoke', 'talked', 'gave presentations', 'addressed a large crowd', 'made public announcments'],
    'WORRIED' : ['worried', 'concerned', 'anxious', 'distraught', 'nervous'],
    'WORDS' : ['words', 'speech', 'diction'],
    'ELOQUENTLY' : ['elequently', 'smoothly', 'clearly', 'very articulate', 'well-expressed'],
    'COMMENTS' : ['comments', 'statements', 'remarks', 'opinions', 'judgements'],
    'HORRIBLE' : ['horrible', 'gross', 'not pleasent', 'disgusting', 'distasteful'],
    'PRESIDENT' : ['President', 'a leader', 'Head of State', 'President of the U.S', 'The United States President'],
    'RESPECTFUL' : ['respectful', 'humble', 'kind', 'polite', 'civil'],
    'QUIET' : ['quiet', 'silent', 'private', 'secret', 'confidential'],
    'RUDE' : ['rude', 'inconsiderate', 'impolite', 'disrespectful', 'uncivil'],
    'PENCE' : ['Pence', 'Mike Pence', 'the Vice President', 'Vice President Mike Pence', 'VP Pence'],
    'BAD' : ['bad', 'awful', 'mean', 'horrendous', 'nasty'],
    'CARE' : ['care', 'be concerned'],
    'NEGATIVE' : ['negative', 'poor', 'bad', 'bleak', 'substandard'],
    'LEAVE' : ['leave', 'stop appearing in', 'stop being in'],
    'LOVES' : ['loves', 'adores', 'wants', 'enjoys', 'likes'],
    'STAR' : ['star', 'star of the show', 'in the spotlight', 'front and center','the man getting lots of publicity'],
    'RETIRE' : ['retire', 'calm down', 'stop being controversial', 'quiet down'],
    'SUPPORT' : ['support', 'back', 'trust', 'care about', 'approve'],
}

def generate_comment():
    s = random.choice(madlibs)

    for k in replacements.keys():
        s = s.replace('['+k+']', random.choice(replacements[k]))
    return s

# connect to reddit 
reddit = praw.Reddit("bot", user_agent="cs40")

# select a "home" submission in the /r/BotTown subreddit to post to
submission_url = 'https://old.reddit.com/r/BotTown2/comments/r0yi9l/main_discussion_thread/'
submission = reddit.submission(url=submission_url)

while True:

    print()
    print('new iteration at:',datetime.datetime.now())
    print('submission.title=',submission.title)
    print('submission.url=',submission.url)

    #(task 0): get a list of all of the comments in the submission

    
    submission.comments.replace_more(limit=None)
     # ----------------------------------------------------------------------------------------------
    # Extra credit 6: have your bot reply to highly upvoted comments first
    submission.comments_sort = "best"
    #----------------------------------------------------------------------------------------------
    all_comments = submission.comments.list()


    print('len(all_comments)=',len(all_comments))

    # (task 1): filter all_comments to remove comments that were generated by your bot
   
    not_my_comments = []
    for comment in all_comments:
        #print('comment.author=', comment.author)
        #print('type(comment.author)=', type(comment.author))
        if str(comment.author) != 'bottina123':
            not_my_comments.append(comment)

    print('len(not_my_comments)=',len(not_my_comments))

    has_not_commented = len(not_my_comments) == len(all_comments)
    print('has_not_commented=', has_not_commented)

    # since comments are ordered by upvotes can loop through not_my_comments and reply to each one
    # not using the random.choice as to reply to the highly upvoted comments first
    for comment in not_my_comments:
        status = True
        for reply in comment.replies:
            if reply.author == 'bottina123':
                status = False
        if status == False:
            continue
        else:
            pass
        if status == True:
            try:
                comment.reply(generate_comment())
            except praw.exceptions.RedditAPIException:
                print('error')
                continue 

    hottest_submissions = []
    subreddit = reddit.subreddit('BotTown2')
    for submission in subreddit.hot(limit=10):
        hottest_submissions.append(submission)
    submission = random.choice(hottest_submissions)
    print('next submission title=', submission.title)
    

    # We sleep just for 1 second at the end of the while loop.
    # This doesn't avoid rate limiting
    # (since we're not sleeping for a long period of time),
    # but it does make the program's output more readable.
    time.sleep(5*60)
